// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../../../resource.mjs";
import * as VersionsAPI from "./versions.mjs";
import { Versions, VersionsV4PagePaginationArray, } from "./versions.mjs";
import { V4PagePaginationArray } from "../../../../pagination.mjs";
export class Workers extends APIResource {
    constructor() {
        super(...arguments);
        this.versions = new VersionsAPI.Versions(this._client);
    }
    /**
     * Create a new Worker.
     *
     * @example
     * ```ts
     * const worker = await client.workers.beta.workers.create({
     *   account_id: '023e105f4ecef8ad9ca31a8372d0c353',
     *   name: 'my-worker',
     * });
     * ```
     */
    create(params, options) {
        const { account_id, ...body } = params;
        return this._client.post(`/accounts/${account_id}/workers/workers`, { body, ...options })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Update an existing Worker.
     *
     * @example
     * ```ts
     * const worker = await client.workers.beta.workers.update(
     *   '023e105f4ecef8ad9ca31a8372d0c353',
     *   {
     *     account_id: '023e105f4ecef8ad9ca31a8372d0c353',
     *     name: 'my-worker',
     *   },
     * );
     * ```
     */
    update(workerId, params, options) {
        const { account_id, ...body } = params;
        return this._client.put(`/accounts/${account_id}/workers/workers/${workerId}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * List all Workers for an account.
     *
     * @example
     * ```ts
     * // Automatically fetches more pages as needed.
     * for await (const worker of client.workers.beta.workers.list(
     *   { account_id: '023e105f4ecef8ad9ca31a8372d0c353' },
     * )) {
     *   // ...
     * }
     * ```
     */
    list(params, options) {
        const { account_id, ...query } = params;
        return this._client.getAPIList(`/accounts/${account_id}/workers/workers`, WorkersV4PagePaginationArray, {
            query,
            ...options,
        });
    }
    /**
     * Delete a Worker and all its associated resources (versions, deployments, etc.).
     *
     * @example
     * ```ts
     * const worker = await client.workers.beta.workers.delete(
     *   '023e105f4ecef8ad9ca31a8372d0c353',
     *   { account_id: '023e105f4ecef8ad9ca31a8372d0c353' },
     * );
     * ```
     */
    delete(workerId, params, options) {
        const { account_id } = params;
        return this._client.delete(`/accounts/${account_id}/workers/workers/${workerId}`, options);
    }
    /**
     * Get details about a specific Worker.
     *
     * @example
     * ```ts
     * const worker = await client.workers.beta.workers.get(
     *   '023e105f4ecef8ad9ca31a8372d0c353',
     *   { account_id: '023e105f4ecef8ad9ca31a8372d0c353' },
     * );
     * ```
     */
    get(workerId, params, options) {
        const { account_id } = params;
        return this._client.get(`/accounts/${account_id}/workers/workers/${workerId}`, options)._thenUnwrap((obj) => obj.result);
    }
}
export class WorkersV4PagePaginationArray extends V4PagePaginationArray {
}
Workers.WorkersV4PagePaginationArray = WorkersV4PagePaginationArray;
Workers.Versions = Versions;
Workers.VersionsV4PagePaginationArray = VersionsV4PagePaginationArray;
//# sourceMappingURL=workers.mjs.map