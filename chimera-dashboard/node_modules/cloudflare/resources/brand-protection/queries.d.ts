import { APIResource } from "../../resource.js";
import * as Core from "../../core.js";
export declare class Queries extends APIResource {
    /**
     * Return a success message after creating new saved string queries
     */
    create(params: QueryCreateParams, options?: Core.RequestOptions): Core.APIPromise<void>;
    /**
     * Return a success message after deleting saved string queries by ID
     */
    delete(params: QueryDeleteParams, options?: Core.RequestOptions): Core.APIPromise<void>;
    /**
     * Return a success message after creating new saved string queries in bulk
     */
    bulk(params: QueryBulkParams, options?: Core.RequestOptions): Core.APIPromise<void>;
}
export interface QueryCreateParams {
    /**
     * Path param:
     */
    account_id: string;
    /**
     * Query param:
     */
    id?: string;
    /**
     * Query param:
     */
    query_scan?: boolean;
    /**
     * Query param:
     */
    query_tag?: string;
    /**
     * Body param:
     */
    max_time?: string | null;
    /**
     * Body param:
     */
    min_time?: string | null;
    /**
     * Body param:
     */
    body_scan?: boolean;
    /**
     * Body param:
     */
    string_matches?: unknown;
    /**
     * Body param:
     */
    body_tag?: string;
}
export interface QueryDeleteParams {
    /**
     * Path param:
     */
    account_id: string;
    /**
     * Query param:
     */
    id?: string;
    /**
     * Query param:
     */
    scan?: boolean;
    /**
     * Query param:
     */
    tag?: string;
}
export interface QueryBulkParams {
    /**
     * Path param:
     */
    account_id: string;
    /**
     * Body param:
     */
    queries?: Array<{
        [key: string]: unknown;
    }>;
}
export declare namespace Queries {
    export { type QueryCreateParams as QueryCreateParams, type QueryDeleteParams as QueryDeleteParams, type QueryBulkParams as QueryBulkParams, };
}
//# sourceMappingURL=queries.d.ts.map