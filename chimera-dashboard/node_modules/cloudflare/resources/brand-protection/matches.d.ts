import { APIResource } from "../../resource.js";
import * as Core from "../../core.js";
export declare class Matches extends APIResource {
    /**
     * Return matches as CSV for string queries based on ID
     */
    download(params: MatchDownloadParams, options?: Core.RequestOptions): Core.APIPromise<MatchDownloadResponse>;
    /**
     * Return matches for string queries based on ID
     */
    get(params: MatchGetParams, options?: Core.RequestOptions): Core.APIPromise<MatchGetResponse>;
}
export interface MatchDownloadResponse {
    matches?: Array<{
        [key: string]: unknown;
    }>;
    total?: number;
}
export interface MatchGetResponse {
    matches?: Array<{
        [key: string]: unknown;
    }>;
    total?: number;
}
export interface MatchDownloadParams {
    /**
     * Path param:
     */
    account_id: string;
    /**
     * Query param:
     */
    id?: string;
    /**
     * Query param:
     */
    include_domain_id?: boolean;
    /**
     * Query param:
     */
    limit?: number;
    /**
     * Query param:
     */
    offset?: number;
}
export interface MatchGetParams {
    /**
     * Path param:
     */
    account_id: string;
    /**
     * Query param:
     */
    id?: string;
    /**
     * Query param:
     */
    include_domain_id?: boolean;
    /**
     * Query param:
     */
    limit?: number;
    /**
     * Query param:
     */
    offset?: number;
}
export declare namespace Matches {
    export { type MatchDownloadResponse as MatchDownloadResponse, type MatchGetResponse as MatchGetResponse, type MatchDownloadParams as MatchDownloadParams, type MatchGetParams as MatchGetParams, };
}
//# sourceMappingURL=matches.d.ts.map