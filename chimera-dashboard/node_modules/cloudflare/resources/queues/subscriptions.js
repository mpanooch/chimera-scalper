"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionListResponsesV4PagePaginationArray = exports.Subscriptions = void 0;
const resource_1 = require("../../resource.js");
const pagination_1 = require("../../pagination.js");
class Subscriptions extends resource_1.APIResource {
    /**
     * Create a new event subscription for a queue
     *
     * @example
     * ```ts
     * const subscription =
     *   await client.queues.subscriptions.create({
     *     account_id: '023e105f4ecef8ad9ca31a8372d0c353',
     *   });
     * ```
     */
    create(params, options) {
        const { account_id, ...body } = params;
        return this._client.post(`/accounts/${account_id}/event_subscriptions/subscriptions`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Update an existing event subscription
     *
     * @example
     * ```ts
     * const subscription =
     *   await client.queues.subscriptions.update(
     *     '023e105f4ecef8ad9ca31a8372d0c353',
     *     { account_id: '023e105f4ecef8ad9ca31a8372d0c353' },
     *   );
     * ```
     */
    update(subscriptionId, params, options) {
        const { account_id, ...body } = params;
        return this._client.patch(`/accounts/${account_id}/event_subscriptions/subscriptions/${subscriptionId}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Get a paginated list of event subscriptions with optional sorting and filtering
     *
     * @example
     * ```ts
     * // Automatically fetches more pages as needed.
     * for await (const subscriptionListResponse of client.queues.subscriptions.list(
     *   { account_id: '023e105f4ecef8ad9ca31a8372d0c353' },
     * )) {
     *   // ...
     * }
     * ```
     */
    list(params, options) {
        const { account_id, ...query } = params;
        return this._client.getAPIList(`/accounts/${account_id}/event_subscriptions/subscriptions`, SubscriptionListResponsesV4PagePaginationArray, { query, ...options });
    }
    /**
     * Delete an existing event subscription
     *
     * @example
     * ```ts
     * const subscription =
     *   await client.queues.subscriptions.delete(
     *     '023e105f4ecef8ad9ca31a8372d0c353',
     *     { account_id: '023e105f4ecef8ad9ca31a8372d0c353' },
     *   );
     * ```
     */
    delete(subscriptionId, params, options) {
        const { account_id } = params;
        return this._client.delete(`/accounts/${account_id}/event_subscriptions/subscriptions/${subscriptionId}`, options)._thenUnwrap((obj) => obj.result);
    }
}
exports.Subscriptions = Subscriptions;
class SubscriptionListResponsesV4PagePaginationArray extends pagination_1.V4PagePaginationArray {
}
exports.SubscriptionListResponsesV4PagePaginationArray = SubscriptionListResponsesV4PagePaginationArray;
Subscriptions.SubscriptionListResponsesV4PagePaginationArray = SubscriptionListResponsesV4PagePaginationArray;
//# sourceMappingURL=subscriptions.js.map