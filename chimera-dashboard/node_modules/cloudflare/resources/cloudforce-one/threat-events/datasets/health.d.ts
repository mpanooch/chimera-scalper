import { APIResource } from "../../../../resource.js";
import * as Core from "../../../../core.js";
export declare class Health extends APIResource {
    /**
     * Benchmark Durable Object warmup
     *
     * @example
     * ```ts
     * const health =
     *   await client.cloudforceOne.threatEvents.datasets.health.get(
     *     '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
     *     { account_id: 'account_id' },
     *   );
     * ```
     */
    get(datasetId: string, params: HealthGetParams, options?: Core.RequestOptions): Core.APIPromise<HealthGetResponse>;
}
export interface HealthGetResponse {
    properties: HealthGetResponse.Properties;
    type: string;
}
export declare namespace HealthGetResponse {
    interface Properties {
        durationMs: Properties.DurationMs;
        ok: Properties.Ok;
        shards: Properties.Shards;
        totalShards: Properties.TotalShards;
        totalSizeBytes: Properties.TotalSizeBytes;
        totalSizeMB: Properties.TotalSizeMB;
    }
    namespace Properties {
        interface DurationMs {
            type: string;
        }
        interface Ok {
            type: string;
        }
        interface Shards {
            items: Shards.Items;
            type: string;
        }
        namespace Shards {
            interface Items {
                properties: Items.Properties;
                type: string;
            }
            namespace Items {
                interface Properties {
                    datasetId: Properties.DatasetID;
                    date: Properties.Date;
                    healthCheckMs: Properties.HealthCheckMs;
                    pageCount: Properties.PageCount;
                    pageSize: Properties.PageSize;
                    sizeBytes: Properties.SizeBytes;
                    sizeMB: Properties.SizeMB;
                    startupMs: Properties.StartupMs;
                    tableStats: Properties.TableStats;
                    timedOut: Properties.TimedOut;
                    totalMs: Properties.TotalMs;
                }
                namespace Properties {
                    interface DatasetID {
                        type: string;
                    }
                    interface Date {
                        type: string;
                    }
                    interface HealthCheckMs {
                        type: string;
                    }
                    interface PageCount {
                        type: string;
                    }
                    interface PageSize {
                        type: string;
                    }
                    interface SizeBytes {
                        type: string;
                    }
                    interface SizeMB {
                        type: string;
                    }
                    interface StartupMs {
                        type: string;
                    }
                    interface TableStats {
                        additionalProperties: TableStats.AdditionalProperties;
                        type: string;
                    }
                    namespace TableStats {
                        interface AdditionalProperties {
                            type: string;
                        }
                    }
                    interface TimedOut {
                        type: string;
                    }
                    interface TotalMs {
                        type: string;
                    }
                }
            }
        }
        interface TotalShards {
            type: string;
        }
        interface TotalSizeBytes {
            type: string;
        }
        interface TotalSizeMB {
            type: string;
        }
    }
}
export interface HealthGetParams {
    /**
     * Account ID.
     */
    account_id: string;
}
export declare namespace Health {
    export { type HealthGetResponse as HealthGetResponse, type HealthGetParams as HealthGetParams };
}
//# sourceMappingURL=health.d.ts.map