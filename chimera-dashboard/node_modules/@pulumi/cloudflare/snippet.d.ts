import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 */
export declare class Snippet extends pulumi.CustomResource {
    /**
     * Get an existing Snippet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnippetState, opts?: pulumi.CustomResourceOptions): Snippet;
    /**
     * Returns true if the given object is an instance of Snippet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Snippet;
    /**
     * The timestamp of when the snippet was created.
     */
    readonly createdOn: pulumi.Output<string>;
    /**
     * The list of files belonging to the snippet.
     */
    readonly files: pulumi.Output<outputs.SnippetFile[]>;
    /**
     * Metadata about the snippet.
     */
    readonly metadata: pulumi.Output<outputs.SnippetMetadata>;
    /**
     * The timestamp of when the snippet was last modified.
     */
    readonly modifiedOn: pulumi.Output<string>;
    /**
     * The identifying name of the snippet.
     */
    readonly snippetName: pulumi.Output<string>;
    /**
     * The unique ID of the zone.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a Snippet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnippetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Snippet resources.
 */
export interface SnippetState {
    /**
     * The timestamp of when the snippet was created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * The list of files belonging to the snippet.
     */
    files?: pulumi.Input<pulumi.Input<inputs.SnippetFile>[]>;
    /**
     * Metadata about the snippet.
     */
    metadata?: pulumi.Input<inputs.SnippetMetadata>;
    /**
     * The timestamp of when the snippet was last modified.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * The identifying name of the snippet.
     */
    snippetName?: pulumi.Input<string>;
    /**
     * The unique ID of the zone.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Snippet resource.
 */
export interface SnippetArgs {
    /**
     * The list of files belonging to the snippet.
     */
    files: pulumi.Input<pulumi.Input<inputs.SnippetFile>[]>;
    /**
     * Metadata about the snippet.
     */
    metadata: pulumi.Input<inputs.SnippetMetadata>;
    /**
     * The identifying name of the snippet.
     */
    snippetName: pulumi.Input<string>;
    /**
     * The unique ID of the zone.
     */
    zoneId: pulumi.Input<string>;
}
